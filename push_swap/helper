
12 20 10 26 17 13 14 2 6 16 15 0 5 19 4 21 25 8 11 27 29 24 9 3 18 22 1 28 23 7

below is a struct which I am using to contain a stack of numbers and other details. I
am using these stack in the push_swap project. However, this means that when I call
fuctions. I have to always hand in both stacks. Am i able to use another struct which I
can call stack->a or somthing like that. Which can have both stack a and b? So i could just
hand in rev_check(t_node **stacks) somthing like that.


typedef struct s_stack_node
{
	long				num;
	long				pos;
	char				stack[2];
	int					chunk;
	int					div;
	struct s_stack_node	*prev;
	struct s_stack_node	*next;
}	t_node;

int	rev_checks(t_node **a, t_node **b, t_node *last, t_node *hold)

void	check_rotate_value(t_stacks stack, t_hold *hold, t_node *hold_a,
	t_node *hold_b)
{
	int		ops_top;
	int		ops_bot;
	t_node	*hold_gold;

	hold_gold = NULL;
	if (hold_a && hold_b)
		return ;
	if (!hold_a && hold_b)
		hold_gold = hold_b;
	else if (!hold_b && hold_a)
		hold_gold = hold_a;
	ops_top = force_rotate_check(stack, hold_gold, 1);
	ops_bot = force_rotate_check(stack, hold_gold, -1);
	if (ops_top <= ops_bot)
		hold->rotate = 1;
	else
		hold->rotate = -1;
}
